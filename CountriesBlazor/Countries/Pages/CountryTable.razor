@page "/countryTable"

<h1 class="text-center">Countries</h1>
<br />
<input @bind="Input" />
<button class="btn btn-primary" @onclick="Search">Search</button>
<h4 class="text-center">@Result</h4>
<br />
<div class="text-center">
    <button class="btn btn-primary" @onclick="Previous">Previous</button>
    <button class="btn btn-primary" @onclick="Next">Next</button>
</div>
<br />

@if (countries == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th><a class="btn btn-link text-danger" @onclick="SortById">Country Id</a></th>
                <th><a class="btn btn-link text-danger" @onclick="SortByName">Country Name</a></th>
                <th><a class="btn btn-link text-danger" @onclick="SortByContinent">Continent</a></th>
            </tr>
        </thead>
        <tbody>
            @for (int i = start; i < end; i++)
            {
                <tr>
                    <td>@countries[i].CountryId</td>
                    <td>@countries[i].CountryName</td>
                    <td>@countries[i].Continent</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private string Input { get; set; }

    private string Result { get; set; }

    private int start = 0;

    private int end = 4;

    private int flag = 0;

    private List<Country> countries = new List<Country>()
{
        new Country
        {
            CountryId = 1,
            CountryName = "Botswana",
            Continent = "Africa"
        },
        new Country
        {
            CountryId = 2,
            CountryName = "Afghanistan",
            Continent = "Asia"
        },
        new Country
        {
            CountryId = 3,
            CountryName = "Azerbaijan",
            Continent = "Asia"
        },
        new Country
        {
            CountryId = 4,
            CountryName = "China",
            Continent = "Asia"
        },
        new Country
        {
            CountryId = 5,
            CountryName = "Finland",
            Continent = "Europe"
        },
        new Country
        {
            CountryId = 6,
            CountryName = "Austria",
            Continent = "Europe"
        },
        new Country
        {
            CountryId = 7,
            CountryName = "Bulgaria",
            Continent = "Europe"
        },
        new Country
        {
            CountryId = 8,
            CountryName = "Russia",
            Continent = "Europe"
        },
        new Country
        {
            CountryId = 9,
            CountryName = "Poland",
            Continent = "Europe"
        },
        new Country
        {
            CountryId = 10,
            CountryName = "Albania",
            Continent = "Europe"
        },
        new Country
        {
            CountryId = 11,
            CountryName = "Czechia",
            Continent = "Europe"
        },
        new Country
        {
            CountryId = 12,
            CountryName = "Hungary",
            Continent = "Europe"
        },
        new Country
        {
            CountryId = 13,
            CountryName = "Denmark",
            Continent = "Europe"
        },
        new Country
        {
            CountryId = 14,
            CountryName = "Australia",
            Continent = "Australia"
        },
        new Country
        {
            CountryId = 15,
            CountryName = "Guyana",
            Continent = "South America"
        },
        new Country
        {
            CountryId = 16,
            CountryName = "Suriname",
            Continent = "South America"
        },
    };

    private class Country
    {
        public int CountryId { get; set; }

        public string CountryName { get; set; }

        public string Continent { get; set; }
    }

    private void Previous()
    {
        start -= 4;

        end -= 4;

        if (start < 0 && end < 4)
        {
            start = 0;

            end = 4;
        }
    }

    private void Next()
    {
        start += 4;

        end += 4;

        if (start > 12 && end > countries.Count)
        {
            start = 12;

            end = countries.Count;
        }
    }

    private void Search()
    {
        Country found = countries.Find(x => x.CountryName == Input);

        Result = $"It's the country name: {@found.CountryName}*******" +
                 $"It's the continent: {@found.Continent} *******" +
                 $"It's the country ID: {@found.CountryId}";
    }

    private void SortById()
    {
        if (flag == 1)
        {
            countries = countries
                .OrderBy(x => x.CountryId)
                .ToList();

            flag = 0;
        }
        else
        {
            countries = countries
               .OrderByDescending(x => x.CountryId)
               .ToList();

            flag = 1;
        }
    }

    private void SortByName()
    {
        if (flag == 0)
        {
            countries = countries
                .OrderBy(x => x.CountryName)
                .ToList();

            flag = 1;
        }
        else
        {
            countries = countries
               .OrderByDescending(x => x.CountryName)
               .ToList();

            flag = 0;
        }
    }

    private void SortByContinent()
    {
        if (flag == 0)
        {
            countries = countries
                .OrderBy(x => x.Continent)
                .ToList();

            flag = 1;
        }
        else
        {
            countries = countries
               .OrderByDescending(x => x.Continent)
               .ToList();

            flag = 0;
        }
    }
}
